<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>fr.pilato.elasticsearch.crawler</groupId>
        <artifactId>fscrawler-parent</artifactId>
        <version>2.6-SNAPSHOT</version>
    </parent>

    <artifactId>fscrawler-it</artifactId>
    <name>FSCrawler Integration Tests</name>

    <dependencies>
        <dependency>
            <groupId>fr.pilato.elasticsearch.crawler</groupId>
            <artifactId>fscrawler-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>fr.pilato.elasticsearch.crawler</groupId>
            <artifactId>fscrawler-rest</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>fr.pilato.elasticsearch.crawler</groupId>
            <artifactId>fscrawler-test-framework</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>fr.pilato.elasticsearch.crawler</groupId>
            <artifactId>fscrawler-test-documents</artifactId>
            <scope>test</scope>
        </dependency>

        <!--
        For legal reasons (incompatible license), these dependencies are to marked as optional so users who might want
        to use them have to provided them manually in the lib dir.
        -->
        <dependency>
            <groupId>com.levigo.jbig2</groupId>
            <artifactId>levigo-jbig2-imageio</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.jai-imageio</groupId>
            <artifactId>jai-imageio-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.jai-imageio</groupId>
            <artifactId>jai-imageio-jpeg2000</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources-binary</directory>
                <filtering>false</filtering>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>

            <!-- We don't deploy our IT artifact to maven central -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!-- We don't deploy our IT artifact to maven central -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!-- We don't deploy our IT artifact to maven central -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>skip-fabric8</id>
            <activation>
                <property>
                    <name>tests.cluster.host</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>run-fabric8</id>
            <activation>
                <property>
                    <name>!tests.cluster.host</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <skip>${skipIntegTests}</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>es-6x</id>
            <properties>
                <integ.elasticsearch.version>${elasticsearch6.version}</integ.elasticsearch.version>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>fr.pilato.elasticsearch.crawler</groupId>
                    <artifactId>fscrawler-elasticsearch-client-v6</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <!-- We only run tests against a given profile -->
                    <plugin>
                        <groupId>com.carrotsearch.randomizedtesting</groupId>
                        <artifactId>junit4-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <!-- There is no unit test so we can skip that execution -->
                                <id>unit-tests</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- To start Docker when running IT -->
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>es-5x</id>
            <properties>
                <integ.elasticsearch.version>5.6.10</integ.elasticsearch.version>
                <!--integ.elasticsearch.version>${elasticsearch5.version}</integ.elasticsearch.version-->
            </properties>
            <dependencies>
                <dependency>
                    <groupId>fr.pilato.elasticsearch.crawler</groupId>
                    <artifactId>fscrawler-elasticsearch-client-v5</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <!-- We only run tests against a given profile -->
                    <plugin>
                        <groupId>com.carrotsearch.randomizedtesting</groupId>
                        <artifactId>junit4-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <!-- There is no unit test so we can skip that execution -->
                                <id>unit-tests</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- To start Docker when running IT -->
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
